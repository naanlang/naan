/*
 * aws_cognito.nlg
 * serviceAws
 *
 *     Access to Cognito services for AWS.
 *
 * column positioning:                          //                          //                      !
 *
 * Copyright (c) 2022 by Richard C. Zulch
 *
 */


/*
 * Cognito
 *
 *     Cognito service functions.
 *
 */

closure Cognito(userPoolID, local cogo) {
    cogo = new(object, this)
    cogo.userPoolID = userPoolID

    //
    // login
    //
    cogo.login = closure login(creds) {
        cogo.aws = xnew(awsSDK.CognitoIdentityServiceProvider, {
            apiVersion: '2016-04-18'
            accessKeyId:        creds.keyID,
            secretAccessKey:    creds.keySecret,
            region:             creds.region })
    }
    
    //
    // getUser
    //
    cogo.adminGetUser = closure adminGetUser(username, local params, pending) {
        params = {
            UserPoolId: cogo.userPoolID
            Username: username
        }
        pending = new(nonce)
        cogo.aws.getFunction(params, function(error, data) {
            if error {
                cogoError = error
                debuglog("aws.cognito.adminGetUser failed", error)
            }
            pending.signal(list(error, data))
        })
        pending.wait()
    }

    // finis
    cogo
}


/*
 * cogoInit
 *
 *     Initialize the Lambda module.
 *
 */

function lambdaInit(local manifest) {
    manifest = `(cogoInit, Cognito)

    Naan.module.build(module.id, "aws_cognito", function(modobj, compobj) {
        require("./serviceAws.nlg")
        compobj.manifest = manifest
        modobj.exports.Cognito = Cognito
    })

} ();
